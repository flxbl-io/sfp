name: Publish a release candidate image to prod


on:
  workflow_call:
   inputs:
    job-environment:
      type: string
      required: true
    repo:
      type: string
      required: false
      default: 'flxbl-io'
    image:
      type: string
      required: false
      default: sfp-rc
    image-as:
      type: string
      required: false
      default: sfp
   secrets:
     username:
        required: true
     token:
        required: true
     signing_secret:
          required: true
     cosign_password:
          required: true
jobs:

  copy:
    name: 'copy rc docker image to production'
    environment: ${{ inputs.job-environment }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write 


    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.4.0

    - name: 'Get package version'
      run: |
         echo "PKG_VERSION=$(jq -r ".version" packages/sfp-cli/package.json)" >> $GITHUB_ENV
         RELEASE_NAME=$(jq -r ".release" packages/sfp-cli/package.json)
         RELEASE_NAME_AS_ARRAY=($RELEASE_NAME)
         RELEASE_NAME=$(echo ${RELEASE_NAME_AS_ARRAY[0]} | cut -c1-3)${RELEASE_NAME_AS_ARRAY[1]}
         echo "RELEASE_NAME=release-$RELEASE_NAME"  >> $GITHUB_ENV

    - name: 'Re expose secretes'
      run: |
         echo "DOCKER_TOKEN=${{ env.token }}" >> $GITHUB_ENV
         echo "DOCKER_USERNAME=${{ env.username }}" >> $GITHUB_ENV
      env:
         token : ${{ secrets.token }}
         username : ${{ secrets.username }}



    - name: 'Copy Docker'
      uses: ./.github/actions/copyDocker
      id: copy-docker
      with:
         repo: ${{ inputs.repo }}
         image: ${{ inputs.image }}
         image-as: ${{ inputs.image-as }}
         tag: ${{ env.PKG_VERSION }}-${{ github.run_id }}
         with-tag: ${{ env.PKG_VERSION }}-${{ github.run_id }}
         registry: ghcr.io
         username:  ${{ env.DOCKER_USERNAME }}
         token: ${{ env.DOCKER_TOKEN }}


    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
          images:  ghcr.io/${{ inputs.repo }}/${{ inputs.image-as }}:${{ env.PKG_VERSION }}-${{ github.run_id }}


    - name: Sign the images with GitHub OIDC Token
      env:
         DIGEST: ${{ steps.copy-docker.outputs.digest }}
         TAGS:  ghcr.io/${{ inputs.repo }}/${{ inputs.image-as }}:${{ env.PKG_VERSION }}-${{ github.run_id }}
      run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}


    - name: 'Tag Docker'
      uses: ./.github/actions/tagDocker
      with:
         repo: ${{ inputs.repo }}
         image: ${{ inputs.image-as }}
         existing-tag: ${{ env.PKG_VERSION }}-${{ github.run_id }}
         new-tag: latest
         registry: ghcr.io
         username:  ${{ env.DOCKER_USERNAME }}
         token: ${{ env.DOCKER_TOKEN }}


    - name: 'Tag Docker With Release Info'
      uses: ./.github/actions/tagDocker
      with:
         repo: ${{ inputs.repo }}
         image: ${{ inputs.image }}
         existing-tag: ${{ env.PKG_VERSION }}-${{ github.run_id }}
         new-tag: release-${{ vars.RELEASE_VERSION }}
         registry: ghcr.io
         username:  ${{ env.DOCKER_USERNAME }}
         token: ${{ env.DOCKER_TOKEN }}